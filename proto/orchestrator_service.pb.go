// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orchestrator_service.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	orchestrator_service.proto

It has these top-level messages:
	ResponseType
	RequestType
	JobRequest
	JobResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type ResponseType struct {
	JobResponse *JobResponse `protobuf:"bytes,1,opt,name=jobResponse" json:"jobResponse,omitempty"`
}

func (m *ResponseType) Reset()                    { *m = ResponseType{} }
func (m *ResponseType) String() string            { return proto1.CompactTextString(m) }
func (*ResponseType) ProtoMessage()               {}
func (*ResponseType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ResponseType) GetJobResponse() *JobResponse {
	if m != nil {
		return m.JobResponse
	}
	return nil
}

type RequestType struct {
	JobRequest *JobRequest `protobuf:"bytes,1,opt,name=jobRequest" json:"jobRequest,omitempty"`
}

func (m *RequestType) Reset()                    { *m = RequestType{} }
func (m *RequestType) String() string            { return proto1.CompactTextString(m) }
func (*RequestType) ProtoMessage()               {}
func (*RequestType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RequestType) GetJobRequest() *JobRequest {
	if m != nil {
		return m.JobRequest
	}
	return nil
}

type JobRequest struct {
	Type    string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
}

func (m *JobRequest) Reset()                    { *m = JobRequest{} }
func (m *JobRequest) String() string            { return proto1.CompactTextString(m) }
func (*JobRequest) ProtoMessage()               {}
func (*JobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *JobRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *JobRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type JobResponse struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
}

func (m *JobResponse) Reset()                    { *m = JobResponse{} }
func (m *JobResponse) String() string            { return proto1.CompactTextString(m) }
func (*JobResponse) ProtoMessage()               {}
func (*JobResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *JobResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JobResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func init() {
	proto1.RegisterType((*ResponseType)(nil), "proto.ResponseType")
	proto1.RegisterType((*RequestType)(nil), "proto.RequestType")
	proto1.RegisterType((*JobRequest)(nil), "proto.JobRequest")
	proto1.RegisterType((*JobResponse)(nil), "proto.JobResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OrchestratorService service

type OrchestratorServiceClient interface {
	StartJob(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (*ResponseType, error)
}

type orchestratorServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrchestratorServiceClient(cc *grpc.ClientConn) OrchestratorServiceClient {
	return &orchestratorServiceClient{cc}
}

func (c *orchestratorServiceClient) StartJob(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (*ResponseType, error) {
	out := new(ResponseType)
	err := grpc.Invoke(ctx, "/proto.OrchestratorService/StartJob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrchestratorService service

type OrchestratorServiceServer interface {
	StartJob(context.Context, *RequestType) (*ResponseType, error)
}

func RegisterOrchestratorServiceServer(s *grpc.Server, srv OrchestratorServiceServer) {
	s.RegisterService(&_OrchestratorService_serviceDesc, srv)
}

func _OrchestratorService_StartJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrchestratorServiceServer).StartJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OrchestratorService/StartJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrchestratorServiceServer).StartJob(ctx, req.(*RequestType))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrchestratorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.OrchestratorService",
	HandlerType: (*OrchestratorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartJob",
			Handler:    _OrchestratorService_StartJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orchestrator_service.proto",
}

func init() { proto1.RegisterFile("orchestrator_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xbf, 0x4b, 0xc7, 0x30,
	0x10, 0xc5, 0xfd, 0x16, 0x7f, 0x5e, 0x44, 0xf0, 0xba, 0x94, 0x4e, 0x92, 0xc9, 0xa9, 0x60, 0x55,
	0x04, 0x27, 0x07, 0xa7, 0x22, 0x08, 0xa9, 0xbb, 0xa4, 0xed, 0x81, 0x15, 0xf1, 0x62, 0x12, 0x85,
	0xfe, 0xf7, 0xc2, 0xb5, 0xb5, 0x59, 0x9c, 0xda, 0x7c, 0xde, 0xbd, 0x97, 0xdc, 0x83, 0x92, 0x7d,
	0xff, 0x46, 0x21, 0x7a, 0x1b, 0xd9, 0xbf, 0x06, 0xf2, 0x3f, 0x63, 0x4f, 0x95, 0xf3, 0x1c, 0x19,
	0x0f, 0xe4, 0xa3, 0x1f, 0xe1, 0xd4, 0x50, 0x70, 0xfc, 0x19, 0xe8, 0x65, 0x72, 0x84, 0x37, 0xa0,
	0xde, 0xb9, 0x5b, 0x51, 0xb1, 0xbb, 0xd8, 0x5d, 0xaa, 0x1a, 0x67, 0x4f, 0xd5, 0x6c, 0x8a, 0x49,
	0xc7, 0xf4, 0x03, 0x28, 0x43, 0x5f, 0xdf, 0x14, 0xa2, 0x84, 0x5c, 0x01, 0x88, 0x2a, 0x64, 0xc9,
	0x38, 0x4f, 0x33, 0x44, 0x30, 0xc9, 0x90, 0xbe, 0x07, 0xd8, 0x14, 0x44, 0xd8, 0x8f, 0x93, 0x9b,
	0xaf, 0x3f, 0x31, 0xf2, 0x8f, 0x05, 0x1c, 0x39, 0x3b, 0x7d, 0xb0, 0x1d, 0x8a, 0x4c, 0xf0, 0x7a,
	0xd4, 0x77, 0xa0, 0x92, 0x97, 0xe1, 0x19, 0x64, 0xe3, 0xb0, 0x58, 0xb3, 0x71, 0xf8, 0xdf, 0x58,
	0x3f, 0x41, 0xfe, 0x9c, 0x34, 0xd4, 0xce, 0x05, 0xe1, 0x2d, 0x1c, 0xb7, 0xd1, 0xfa, 0xd8, 0x70,
	0x87, 0xeb, 0xea, 0xc9, 0x7a, 0x65, 0xfe, 0xc7, 0xb6, 0xe2, 0xf4, 0x5e, 0x77, 0x28, 0xf4, 0xfa,
	0x37, 0x00, 0x00, 0xff, 0xff, 0xfc, 0xb0, 0xf5, 0x90, 0x76, 0x01, 0x00, 0x00,
}
